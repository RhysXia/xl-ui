@import 'commons/var';
@import 'mixins/utils';
@mixin make-col($breakpoint, $number: 24) {
  $prefix: col-#{$breakpoint}-;
  @if $breakpoint==span {
    $prefix: col-;
  }
  .#{$--cls-prefix}-#{$prefix}0 {
    display: none;
  }
  @for $i from 1 through $number {
    .#{$--cls-prefix}-#{$prefix}#{$i} {
      display: block;
      width: $i / $number * 100%;
    }
    .#{$--cls-prefix}-#{$prefix}pull-#{$i} {
      position: relative;
      right: $i / $number * 100%;
    }
    .#{$--cls-prefix}-#{$prefix}offset-#{$i} {
      margin-left: $i / $number * 100%;
    }
    .#{$--cls-prefix}-#{$prefix}push-#{$i} {
      position: relative;
      left: $i / $number * 100%;
    }
  }
}

@mixin media-col( $breakpoints) {
  @each $key in map_keys($breakpoints) {
    $next: breakpoint-next($key);
    @media only screen and (min-width: #{map_get($breakpoints,$key)}) {
      @include make-col($key);
    }
  }
}

.#{$--cls-prefix}-row {
  position: relative;
  box-sizing: border-box;
  @include clearfix;
  &--flex {
    display: flex;
    flex-direction: row;
    &:after {
      display: none;
    }
  }
  &--start {
    justify-content: flex-start;
  }
  &--end {
    justify-content: flex-end;
  }
  &--center {
    justify-content: center;
  }
  &--space-around {
    justify-content: space-around;
  }
  &--space-between {
    justify-content: space-between;
  }
  &--top {
    align-items: flex-start;
  }
  &--middle {
    align-items: center;
  }
  &--bottom {
    align-items: flex-end;
  }
}

.#{$--cls-prefix}-col {
  float: left;
  box-sizing: border-box;
}

@include make-col(span);
@include media-col($--grid-breakpoints);
