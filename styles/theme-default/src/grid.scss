@import 'commons/var';
@import 'mixins/bem';
@import 'mixins/utils';
@mixin make-col($breakpoint, $number: 24) {
  $prefix: col-#{$breakpoint}-;
  @if $breakpoint==span {
    $prefix: col-;
  }
  @include b(#{$prefix}0) {
    display: none;
  }
  @for $i from 1 through $number {
    @include b(#{$prefix}#{$i}) {
      display: block;
      width: $i / $number * 100%;
    }
    @include b(#{$prefix}pull-#{$i}) {
      position: relative;
      right: $i / $number * 100%;
    }
    @include b(#{$prefix}offset-#{$i}) {
      margin-left: $i / $number * 100%;
    }
    @include b(#{$prefix}push-#{$i}) {
      position: relative;
      left: $i / $number * 100%;
    }
  }
}

@mixin media-col( $breakpoints) {
  @each $key in map_keys($breakpoints) {
    $next: breakpoint-next($key);
    @media only screen and (min-width: #{map_get($breakpoints,$key)}) {
      @include make-col($key);
    }
  }
}

@include b(row) {
  position: relative;
  box-sizing: border-box;
  @include clearfix;
  @include m(flex) {
    display: flex;
    flex-direction: row;
    &:after {
      display: none;
    }
    @include m(start) {
      justify-content: flex-start;
    }
    @include m(end) {
      justify-content: flex-end;
    }
    @include m(center) {
      justify-content: center;
    }
    @include m(space-around) {
      justify-content: space-around;
    }
    @include m(space-between) {
      justify-content: space-between;
    }
    @include m(top) {
      align-items: flex-start;
    }
    @include m(middle) {
      align-items: center;
    }
    @include m(bottom) {
      align-items: flex-end;
    }
  }
  @include b(col) {
    float: left;
    box-sizing: border-box;
  }
  @include make-col(span);
  @include media-col($--grid-breakpoints);
}
