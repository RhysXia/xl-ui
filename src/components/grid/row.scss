@import '../../styles/variables.scss';
.#{$clsPrefix}-row {
  position: relative;
  box-sizing: border-box;
  //   @include clearfix;
  &--flex {
    display: flex;
    flex-direction: row;
    &:after {
      display: none;
    }
    &.c-row--start {
      justify-content: flex-start;
    }
    &.c-row--end {
      justify-content: flex-end;
    }
    &.c-row--center {
      justify-content: center;
    }
    &.c-row--space-around {
      justify-content: space-around;
    }
    &.c-row--space-between {
      justify-content: space-between;
    }
    &.c-row--top {
      align-items: flex-start;
    }
    &.c-row--middle {
      align-items: center;
    }
    &.c-row--bottom {
      align-items: flex-end;
    }
  }
}

$sm: 768px;
$md: 992px;
$lg: 1200px;
$xl: 1920px;
$grid-breakpoints: (
  'xs': (max-width: $sm),
  'sm': (min-width: $sm) and (max-width: $md),
  'md': (min-width: $md) and (max-width: $lg),
  'lg': (min-width: $lg) and (max-width: $xl),
  'xl': (min-width: $xl)
);
@mixin col($clsPrefix, $size, $number) {
  @if ($size==span) {
    $size: #{''};
  } @else {
    $size: -#{$size};
  }
  .#{$clsPrefix}-#{$size}-0 {
    display: none;
  }
  @for $i from 1 through $number {
    .#{$clsPrefix}-#{$size}-#{$i} {
      width: $i / $number * 100%;
    }
    .#{$clsPrefix}-#{$size}-pull-#{$i} {
      position: relative;
      right: $i / $number * 100%;
    }
    .#{$clsPrefix}-#{$size}-offset-#{$i} {
      margin-left: $number / 24 * 100%;
    }
    .#{$clsPrefix}-#{$size}-push-#{$i} {
      position: relative;
      left: $i / $number * 100%;
    }
  }
}

@mixin media-col($breakpoints) {
  @each $key in map_keys($breakpoints) {
    @media only screen and #{map_get($breakpoints,$key)} {
      @include col(c-col, $key, 24);
    }
  }
}

.c-col {
  float: left;
  box-sizing: border-box;
}

@include col(c-col, span, 24);
@include media-col($grid-breakpoints);
